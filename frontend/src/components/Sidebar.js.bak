import React, { useState } from 'react';
import { Link, useLocation } from 'react-router-dom';
import { useAuth } from '../contexts/AuthContext';
import {
  HomeIcon,
  ClipboardDocumentListIcon,
  AcademicCapIcon,
  ClipboardDocumentCheckIcon,
  UserGroupIcon,
  ChartBarIcon,
  ChevronRightIcon,
  ChevronDownIcon,
  Bars3Icon,
  XMarkIcon
} from '@heroicons/react/24/outline';

const Sidebar = () => {
  const location = useLocation();
  const { user } = useAuth();
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);

  // Determinar los módulos accesibles según el rol del usuario
  const getModules = () => {
    const allModules = [
      {
        title: 'Dashboard',
        path: '/dashboard',
        icon: <HomeIcon className="h-6 w-6" />,
        allowedRoles: ['administrador', 'docente', 'estudiante', 'acudiente']
      },
      {
        title: 'Planeaciones',
        path: '/planeaciones',
        icon: <ClipboardDocumentListIcon className="h-6 w-6" />,
        allowedRoles: ['administrador', 'docente']
      },
      {
        title: 'Calificaciones',
        path: '/calificaciones',
        icon: <AcademicCapIcon className="h-6 w-6" />,
        allowedRoles: ['administrador', 'docente', 'estudiante', 'acudiente']
      },
      {
        title: 'Asistencias',
        path: '/asistencias',
        icon: <ClipboardDocumentCheckIcon className="h-6 w-6" />,
        allowedRoles: ['administrador', 'docente', 'estudiante', 'acudiente']
      },
      {
        title: 'Observador',
        path: '/observador',
        icon: <UserGroupIcon className="h-6 w-6" />,
        allowedRoles: ['administrador', 'docente', 'acudiente']
      },
      {
        title: 'Reportes',
        path: '/reportes',
        icon: <ChartBarIcon className="h-6 w-6" />,
        allowedRoles: ['administrador', 'docente', 'acudiente']
      }
    ];

    // Si no hay usuario, mostrar solo el Dashboard
    if (!user) {
      return allModules.filter(module => module.path === '/dashboard');
    }

    // Filtrar módulos por rol
    return allModules.filter(module => module.allowedRoles.includes(user.rol));
  };

  const modules = getModules();

  const toggleMobileMenu = () => {
    setIsMobileMenuOpen(!isMobileMenuOpen);
  };

  return (
    <>
      {/* Botón móvil para mostrar/ocultar sidebar */}
      <div className="md:hidden flex items-center justify-between p-4 bg-blue-700 text-white">
        <span className="font-medium">Menú</span>
        <button 
          onClick={toggleMobileMenu}
          className="p-1 rounded-md focus:outline-none focus:ring-2 focus:ring-white"
        >
          {isMobileMenuOpen ? (
            <XMarkIcon className="h-6 w-6" />
          ) : (
            <Bars3Icon className="h-6 w-6" />
          )}
        </button>
      </div>

      {/* Sidebar para móvil */}
      <div className={`md:hidden ${isMobileMenuOpen ? 'block' : 'hidden'} bg-blue-800 text-white`}>
        <nav className="px-2 pt-2 pb-4 space-y-1">
          {modules.map((module) => (
            <Link
              key={module.path}
              to={module.path}
              className={`flex items-center px-4 py-3 text-sm rounded-md ${
                location.pathname === module.path
                  ? 'bg-blue-900 text-white'
                  : 'text-gray-100 hover:bg-blue-700'
              }`}
              onClick={() => setIsMobileMenuOpen(false)}
            >
              <span className="mr-3">{module.icon}</span>
              <span>{module.title}</span>
            </Link>
          ))}
        </nav>
      </div>

      {/* Sidebar para escritorio */}
      <div className="hidden md:block bg-blue-800 text-white h-screen sticky top-0 w-64">
        <div className="p-4 font-medium text-lg border-b border-blue-700">
          SISE
        </div>
        <nav className="p-4 space-y-1">
          {modules.map((module) => (
            <Link
              key={module.path}
              to={module.path}
              className={`flex items-center px-4 py-3 text-sm rounded-md ${
                location.pathname === module.path
                  ? 'bg-blue-900 text-white'
                  : 'text-gray-100 hover:bg-blue-700'
              }`}
            >
              <span className="mr-3">{module.icon}</span>
              <span>{module.title}</span>
              {location.pathname === module.path ? (
                <ChevronDownIcon className="ml-auto h-4 w-4" />
              ) : (
                <ChevronRightIcon className="ml-auto h-4 w-4" />
              )}
            </Link>
          ))}
        </nav>
      </div>
    </>
  );
};

export default Sidebar; 